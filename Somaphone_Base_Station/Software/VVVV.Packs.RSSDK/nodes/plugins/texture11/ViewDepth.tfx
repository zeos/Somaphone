//@author: zeos
//@help: RealSense texture fx
//@tags: texture
//@credits: DX11 by vux

Texture2D<half> tex : PREVIOUS;

SamplerState Samp : IMMUTABLE
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    MipLodBias = 0;
};

int2 SensorsRange <string uiname="Sensor Range";>;
float LowConfidenceValue <string uiname="Low Confidence Value";>;
float Unit <string uiname="Depth Unit";>;
bool invert <string uiname="Invert";>;
struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float PS(psInput input) : SV_Target
{
	float c = tex.SampleLevel(Samp, input.uv, 0);
	uint d =  asuint(c);
	
	float v = d;
	if (v == LowConfidenceValue)
    { 
    	v = 0;  
    }  
    else 
  	{  
  		v = v / 2047;
  		v = v * Unit;
  		//v = v / SensorsRange[1]* Unit;  
  		if(invert) v = 1 - v;
  		
  	}  
	return v;
}

technique10 Process
{
	pass P0 <string format="R32_Float";>
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



